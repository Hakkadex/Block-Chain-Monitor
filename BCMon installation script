#!/bin/bash

# Create the BCmon directory on the Desktop
mkdir -p ~/Desktop/BCmon
cd ~/Desktop/BCmon

# Download the Python script for blockchain monitoring
cat << 'EOF' > blockchain_monitor.py
#!/usr/bin/env python3

import requests
import sys
import json
import time
import urllib.parse

BLOCKCHAIN_API = {
    "solana": "https://api.mainnet-beta.solana.com",
    "eth": "https://api.etherscan.io/api",
    "binance": "https://api.bscscan.com/api",
    "cronos": "https://api.cronos.org",
    # Add additional blockchains here
}

TRANSACTION_SEARCH_TERMS = [
    'transfer', 'payment', 'deposit', 'withdrawal', 'blockchain', 'crypto',
    'wallet', 'transaction', 'fee', 'contract', 'token'
]

def fetch_transactions(chain):
    """Fetch transactions for a given blockchain."""
    try:
        if chain == "eth":
            # Ethereum API request
            url = f"{BLOCKCHAIN_API['eth']}?module=account&action=txlist&address=0xAddressHere&startblock=0&endblock=99999999&page=1&offset=10&sort=desc&apikey=YourAPIKey"
            response = requests.get(url)
            response.raise_for_status()
            data = response.json()
            return data.get('result', [])
        elif chain == "solana":
            # Solana API request
            url = BLOCKCHAIN_API['solana']
            response = requests.get(url)
            response.raise_for_status()
            data = response.json()
            return data.get('transactions', [])
        else:
            return []  # Return empty for unsupported chains
    except requests.exceptions.RequestException as e:
        print(f"Error fetching data for {chain}: {e}")
        return []

def display_results(results):
    """Display transaction results in the terminal."""
    if not results:
        print("No results found.")
        return

    for result in results:
        if 'tx_hash' in result:
            print(f"Transaction Hash: {result['tx_hash']}")
            print(f"From: {result['from']}")
            print(f"To: {result['to']}")
            print(f"Value: {result['value']}")
        else:
            print(f"Transaction: {result}")
        print("-" * 80)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: BCmon <chain>")
        sys.exit(1)

    chain = sys.argv[1].lower()
    if chain in BLOCKCHAIN_API:
        print(f"Fetching transactions for {chain}...")
        transactions = fetch_transactions(chain)
        display_results(transactions)
    else:
        print("Unsupported blockchain. Please choose from Solana, Ethereum, BNB, Cronos.")
        sys.exit(1)
EOF

# Make the blockchain_monitor.py script executable
chmod +x blockchain_monitor.py

# Create a symlink to make the command available in the PATH
sudo ln -s ~/Desktop/BCmon/blockchain_monitor.py /usr/local/bin/BCmon

echo "Installation complete. You can now use the 'BCmon' command from anywhere to monitor blockchain transactions."
